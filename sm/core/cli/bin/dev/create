#!/bin/sh

[[ -n "${extension_args}" ]] ||
  __sm.log.fail "create: You must specify at least one extension name."

target_path="${extensions_development_path:-"$initial_pwd"}"

for extension in ${extension_args[@]}
do
  if paths exists "${target_path}/${extension}"
  then
    __sm.log.error "create: Extension '${extension}' already exists "\
    "at ${target_path}/${extension}."
  fi

  paths exists "${sm_path}/core/cli/templates/api/" ||
    __sm.log.fail "create: Extension template files are missing from "\
      "$target_path/core/cli/templates/api/"

  paths enter "${sm_path}/core/cli/templates/api/"

  _path="${target_path}/${extension}"

  paths copy bin shell templates config \
    to "${_path}"

  copy_files README.md VERSION CHANGELOG.md TODO.md \
    to "${_path}"

  for _module in "${extension_modules[@]}"
  do
    extension_module_add "${extension}" "${_module}" "${_path}"

    # Run the module's extension setup function, if it exists.
    if files exist "${sm_path}/core/cli/shell/${_module}/extensions"
    then
      files source "${sm_path}/core/cli/shell/${_module}/extensions"
      if command exists "${_module}_extension_setup"
      then
        "${_module}_extension_setup" "${extension}" "${_module}" "${_path}"
        #unset -f "${_module}_extension_setup"
      fi
    fi
  done

  log "Extension created from template at ${target_path}/${extension}/."
done

succeed "Created extensions ${extension_args[@]}."

